{"version":3,"sources":["webpack:///./src/pages/academic_paper.js"],"names":["IndexPage","data","frontmatter","index","edges","node","seoTitle","useSeoTitleSuffix","useSplashScreen","initialState","isIntroDone","darkMode","title","seoTitleSuffix","content","academicPapers","propTypes","PropTypes","object","isRequired"],"mappings":"2FAAA,qMAkBMA,EAAY,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACXC,EAAgBD,EAAKE,MAAMC,MAAM,GAAGC,KAApCH,YACAI,EAAiDJ,EAAjDI,SAAUC,EAAuCL,EAAvCK,kBAAuCL,EAApBM,gBAUrC,OACA,kBAAC,IAAD,CAAqBC,aATD,CAElBC,aAAa,EAGbC,UAAU,IAKV,kBAAC,IAAD,KAEE,kBAAC,IAAD,CACEC,MACEL,EAAiB,UACVD,EADU,cACIO,kBADJ,UAEVP,KASX,kBAAC,IAAD,CAAgBQ,QAASb,EAAKc,eAAeX,WAOnDJ,EAAUgB,UAAY,CACtBf,KAAMgB,IAAUC,OAAOC,YAGRnB","file":"component---src-pages-academic-paper-js-6258650b232ccce1036d.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { graphql } from \"gatsby\"\n\nimport GlobalStateProvider from \"../context/provider\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport Sidebar from \"../components/sidebar\"\nimport Hero from \"../components/sections/hero\"\nimport Articles from \"../components/sections/articles\"\nimport About from \"../components/sections/about\"\nimport Interests from \"../components/sections/interests\"\nimport Projects from \"../components/sections/projects\"\nimport AcademicPapers from \"../components/sections/academic_paper\"\nimport Papers from \"../components/sections/papers\"\nimport Contact from \"../components/sections/contact\"\nimport { seoTitleSuffix } from \"../../config\"\n\nconst IndexPage = ({ data }) => {\n  const { frontmatter } = data.index.edges[0].node\n  const { seoTitle, useSeoTitleSuffix, useSplashScreen } = frontmatter\n\n  const globalState = {\n    // if useSplashScreen=false, we skip the intro by setting isIntroDone=true\n    isIntroDone: true,\n    // darkMode is initially disabled, a hook inside the Layout component\n    // will check the user's preferences and switch to dark mode if needed\n    darkMode: false,\n  }\n\n  return (\n  <GlobalStateProvider initialState={globalState}>\n    <Layout>\n      {/* <Sidebar open={sideBarState} setOpen={changeSideBarState}/> */}\n      <SEO\n        title={\n          useSeoTitleSuffix\n            ? `${seoTitle} - ${seoTitleSuffix}`\n            : `${seoTitle}`\n        }\n      />\n      {/* <Hero content={data.hero.edges} /> */}\n      {/* Articles is populated via Medium RSS Feed fetch */}\n      {/* <Articles /> */}\n      {/* <About content={data.about.edges} /> */}\n      {/* <Interests content={data.interests.edges} /> */}\n      {/* <Projects content={data.projects.edges} /> */}\n      <AcademicPapers content={data.academicPapers.edges} />\n      {/* <Contact content={data.contact.edges} /> */}\n    </Layout>\n  </GlobalStateProvider>\n)\n}\n\nIndexPage.propTypes = {\ndata: PropTypes.object.isRequired,\n}\n\nexport default IndexPage\n\nexport const pageQuery = graphql`\n{\n  index: allMdx(filter: { fileAbsolutePath: { regex: \"/index/index/\" } }) {\n    edges {\n      node {\n        frontmatter {\n          seoTitle\n          useSeoTitleSuffix\n          useSplashScreen\n        }\n      }\n    }\n  }\n  hero: allMdx(filter: { fileAbsolutePath: { regex: \"/index/hero/\" } }) {\n    edges {\n      node {\n        body\n        frontmatter {\n          greetings\n          title\n          subtitlePrefix\n          subtitle\n          icon {\n            childImageSharp {\n              fluid(maxWidth: 60, quality: 90) {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n  about: allMdx(filter: { fileAbsolutePath: { regex: \"/index/about/\" } }) {\n    edges {\n      node {\n        body\n        frontmatter {\n          title\n          image {\n            childImageSharp {\n              fluid(maxWidth: 400, quality: 90) {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n  interests: allMdx(\n    filter: { fileAbsolutePath: { regex: \"/index/interests/\" } }\n  ) {\n    edges {\n      node {\n        exports {\n          shownItems\n          interests {\n            name\n            icon {\n              childImageSharp {\n                fixed(width: 20, height: 20, quality: 90) {\n                  ...GatsbyImageSharpFixed\n                }\n              }\n            }\n          }\n        }\n        frontmatter {\n          title\n        }\n      }\n    }\n  }\n  projects: allMdx(\n    filter: {\n      fileAbsolutePath: { regex: \"/index/projects/\" }\n      frontmatter: { visible: { eq: true } }\n    }\n    sort: { fields: [frontmatter___position], order: ASC }\n  ) {\n    edges {\n      node {\n        body\n        frontmatter {\n          title\n          category\n          emoji\n          external\n          github\n          screenshot {\n            childImageSharp {\n              fluid(maxWidth: 400, quality: 90) {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n          tags\n          position\n          buttonVisible\n          buttonUrl\n          buttonText\n        }\n      }\n    }\n  }\n  academicPapers: allMdx(\n    filter: {\n      fileAbsolutePath: { regex: \"/index/academicPapers/\" }\n      frontmatter: { visible: { eq: true } }\n    }\n    sort: { fields: [frontmatter___position], order: ASC }\n  ) {\n    edges {\n      node {\n        body\n        frontmatter {\n          title\n          category\n          emoji\n          external\n          github\n          screenshot {\n            childImageSharp {\n              fluid(maxWidth: 400, quality: 90) {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n          tags\n          position\n          buttonVisible\n          buttonUrl\n          buttonText\n        }\n      }\n    }\n  }\n  contact: allMdx(\n    filter: { fileAbsolutePath: { regex: \"/index/contact/\" } }\n  ) {\n    edges {\n      node {\n        body\n        frontmatter {\n          title\n          name\n          email\n          profileImage {\n            childImageSharp {\n              fluid(maxWidth: 400, quality: 90) {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n`\n"],"sourceRoot":""}