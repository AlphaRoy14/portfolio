{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["IndexPage","data","frontmatter","index","edges","node","seoTitle","useSeoTitleSuffix","globalState","isIntroDone","useSplashScreen","darkMode","initialState","title","seoTitleSuffix","content","hero","about","interests","projects","contact","propTypes","PropTypes","object","isRequired"],"mappings":"4FAAA,iNAmBMA,EAAY,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACXC,EAAgBD,EAAKE,MAAMC,MAAM,GAAGC,KAApCH,YACAI,EAAiDJ,EAAjDI,SAAUC,EAAuCL,EAAvCK,kBAEZC,EAAc,CAElBC,aAJuDP,EAApBQ,gBAOnCC,UAAU,GASZ,OACE,kBAAC,IAAD,CAAqBC,aAAcJ,GACjC,kBAAC,IAAD,KAEE,kBAAC,IAAD,CACEK,MACEN,EAAiB,UACVD,EADU,cACIQ,kBADJ,UAEVR,KAGX,kBAAC,IAAD,CAAMS,QAASd,EAAKe,KAAKZ,QAGzB,kBAAC,IAAD,CAAOW,QAASd,EAAKgB,MAAMb,QAC3B,kBAAC,IAAD,CAAWW,QAASd,EAAKiB,UAAUd,QACnC,kBAAC,IAAD,CAAUW,QAASd,EAAKkB,SAASf,QAEjC,kBAAC,IAAD,MACA,kBAAC,IAAD,CAASW,QAASd,EAAKmB,QAAQhB,WAMvCJ,EAAUqB,UAAY,CACpBpB,KAAMqB,IAAUC,OAAOC,YAGVxB","file":"component---src-pages-index-js-a214dc3598d85dd33fce.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { graphql } from \"gatsby\"\n\nimport GlobalStateProvider from \"../context/provider\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport Sidebar from \"../components/sidebar\"\nimport Hero from \"../components/sections/hero\"\nimport Articles from \"../components/sections/articles\"\nimport About from \"../components/sections/about\"\nimport Interests from \"../components/sections/interests\"\nimport Projects from \"../components/sections/projects\"\nimport AcademicPapers from \"../components/sections/academic_paper\"\nimport Papers from \"../components/sections/papers\"\nimport Contact from \"../components/sections/contact\"\nimport { seoTitleSuffix } from \"../../config\"\n// import { useState } from \"react\"\n\nconst IndexPage = ({ data }) => {\n  const { frontmatter } = data.index.edges[0].node\n  const { seoTitle, useSeoTitleSuffix, useSplashScreen } = frontmatter\n\n  const globalState = {\n    // if useSplashScreen=false, we skip the intro by setting isIntroDone=true\n    isIntroDone: useSplashScreen ? false : true,\n    // darkMode is initially disabled, a hook inside the Layout component\n    // will check the user's preferences and switch to dark mode if needed\n    darkMode: false,\n  }\n\n  // const [sideBarState, setSideBarState] = useState(false)\n\n  // const changeSideBarState = () => {\n  //   setSideBarState(!sideBarState)\n  // }\n\n  return (\n    <GlobalStateProvider initialState={globalState}>\n      <Layout>\n        {/* <Sidebar open={sideBarState} setOpen={changeSideBarState}/> */}\n        <SEO\n          title={\n            useSeoTitleSuffix\n              ? `${seoTitle} - ${seoTitleSuffix}`\n              : `${seoTitle}`\n          }\n        />\n        <Hero content={data.hero.edges} />\n        {/* Articles is populated via Medium RSS Feed fetch */}\n        {/* <Articles /> */}\n        <About content={data.about.edges} />\n        <Interests content={data.interests.edges} />\n        <Projects content={data.projects.edges} />\n        {/* <AcademicPapers content={data.academicPapers.edges} /> */}\n        <Papers />\n        <Contact content={data.contact.edges} />\n      </Layout>\n    </GlobalStateProvider>\n  )\n}\n\nIndexPage.propTypes = {\n  data: PropTypes.object.isRequired,\n}\n\nexport default IndexPage\n\nexport const pageQuery = graphql`\n  {\n    index: allMdx(filter: { fileAbsolutePath: { regex: \"/index/index/\" } }) {\n      edges {\n        node {\n          frontmatter {\n            seoTitle\n            useSeoTitleSuffix\n            useSplashScreen\n          }\n        }\n      }\n    }\n    hero: allMdx(filter: { fileAbsolutePath: { regex: \"/index/hero/\" } }) {\n      edges {\n        node {\n          body\n          frontmatter {\n            greetings\n            title\n            subtitlePrefix\n            subtitle\n            icon {\n              childImageSharp {\n                fluid(maxWidth: 60, quality: 90) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    about: allMdx(filter: { fileAbsolutePath: { regex: \"/index/about/\" } }) {\n      edges {\n        node {\n          body\n          frontmatter {\n            title\n            image {\n              childImageSharp {\n                fluid(maxWidth: 400, quality: 90) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n            list1\n            list2\n            subSection\n          }\n        }\n      }\n    }\n    interests: allMdx(\n      filter: { fileAbsolutePath: { regex: \"/index/interests/\" } }\n    ) {\n      edges {\n        node {\n          exports {\n            shownItems\n            interests {\n              name\n              icon {\n                childImageSharp {\n                  fixed(width: 20, height: 20, quality: 90) {\n                    ...GatsbyImageSharpFixed\n                  }\n                }\n              }\n            }\n          }\n          frontmatter {\n            title\n          }\n        }\n      }\n    }\n    projects: allMdx(\n      filter: {\n        fileAbsolutePath: { regex: \"/index/projects/\" }\n        frontmatter: { visible: { eq: true } }\n      }\n      sort: { fields: [frontmatter___position], order: ASC }\n    ) {\n      edges {\n        node {\n          body\n          frontmatter {\n            title\n            category\n            emoji\n            external\n            github\n            screenshot {\n              childImageSharp {\n                fluid(maxWidth: 400, quality: 90) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n            tags\n            position\n            buttonVisible\n            buttonUrl\n            buttonText\n          }\n        }\n      }\n    }\n    academicPapers: allMdx(\n      filter: {\n        fileAbsolutePath: { regex: \"/index/academicPapers/\" }\n        frontmatter: { visible: { eq: true } }\n      }\n      sort: { fields: [frontmatter___position], order: ASC }\n    ) {\n      edges {\n        node {\n          body\n          frontmatter {\n            title\n            category\n            emoji\n            external\n            github\n            screenshot {\n              childImageSharp {\n                fluid(maxWidth: 400, quality: 90) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n            tags\n            position\n            buttonVisible\n            buttonUrl\n            buttonText\n          }\n        }\n      }\n    }\n    contact: allMdx(\n      filter: { fileAbsolutePath: { regex: \"/index/contact/\" } }\n    ) {\n      edges {\n        node {\n          body\n          frontmatter {\n            title\n            name\n            email\n            profileImage {\n              childImageSharp {\n                fluid(maxWidth: 400, quality: 90) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}